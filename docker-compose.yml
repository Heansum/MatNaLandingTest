version: '3.8'

services:
  # PostgreSQL Database (Supabase compatible)
  postgres:
    image: postgis/postgis:15-3.3
    container_name: nagune-postgres
    environment:
      POSTGRES_DB: restaurant_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/sql:/docker-entrypoint-initdb.d
    networks:
      - nagune-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: nagune-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nagune-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nagune-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SUPABASE_DB_HOST: postgres
      SUPABASE_DB_PORT: 5432
      SUPABASE_DB_NAME: restaurant_platform
      SUPABASE_DB_USER: postgres
      SUPABASE_DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - nagune-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nagune-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - nagune-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nagune-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - nagune-network

volumes:
  postgres_data:
  redis_data:

networks:
  nagune-network:
    driver: bridge

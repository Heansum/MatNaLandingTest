spring:
  application:
    name: restaurant-platform
  
  datasource:
    url: jdbc:postgresql://${SUPABASE_DB_HOST:localhost}:${SUPABASE_DB_PORT:5432}/${SUPABASE_DB_NAME:postgres}
    username: ${SUPABASE_DB_USER:postgres}
    password: ${SUPABASE_DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
        format_sql: true
        jdbc:
          time_zone: UTC
    open-in-view: false
    
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID:}
            client-secret: ${KAKAO_CLIENT_SECRET:}
            scope:
              - profile_nickname
              - account_email
          apple:
            client-id: ${APPLE_CLIENT_ID:}
            client-secret: ${APPLE_CLIENT_SECRET:}
            scope:
              - email
              - name
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize
            token-uri: https://appleid.apple.com/auth/token
            user-info-uri: https://appleid.apple.com/auth/userinfo
            user-name-attribute: sub

# Supabase Configuration
supabase:
  url: ${SUPABASE_URL:}
  anon-key: ${SUPABASE_ANON_KEY:}
  service-role-key: ${SUPABASE_SERVICE_ROLE_KEY:}
  bucket:
    name: ${SUPABASE_BUCKET_NAME:restaurant-media}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-change-in-production}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api

# Logging
logging:
  level:
    com.nagune.restaurantplatform: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
